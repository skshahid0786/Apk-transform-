import { GoogleGenAI, Modality, GenerativePart } from "@google/genai";

const API_KEY = process.env.API_KEY;

if (!API_KEY) {
    throw new Error("API_KEY environment variable not set");
}

const ai = new GoogleGenAI({ apiKey: API_KEY });

const model = 'gemini-2.5-flash-image';

const PROMPT_SUFFIX = " The output must be the transformed image only, without any text, explanation, or commentary.";

export const transformImage = async (imagePart: GenerativePart, prompt: string): Promise<string> => {
    try {
        const fullPrompt = prompt + PROMPT_SUFFIX;

        const response = await ai.models.generateContent({
            model: model,
            contents: {
                parts: [
                    imagePart,
                    { text: fullPrompt },
                ],
            },
            config: {
                responseModalities: [Modality.IMAGE],
            },
        });

        if (response.candidates && response.candidates.length > 0) {
            const imagePart = response.candidates[0].content.parts.find(part => part.inlineData);
            if (imagePart && imagePart.inlineData) {
                return imagePart.inlineData.data;
            }
        }
        throw new Error("No image was generated by the API.");

    } catch (error) {
        console.error("Error calling Gemini API:", error);
        throw new Error("Failed to communicate with the Gemini API.");
    }
};